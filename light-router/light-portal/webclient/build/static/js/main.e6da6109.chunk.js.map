{"version":3,"sources":["components/Home.js","components/Wallet.js","components/CurrencyBalance.js","components/CurrencySent.js","components/CurrencyTransaction.js","components/TokenCreated.js","components/TokenApproved.js","components/TokenTransferred.js","components/TokenWithdrawn.js","components/TokenInfo.js","components/TokenAccount.js","components/TokenTransaction.js","components/KycCreated.js","components/KycUpdated.js","components/KycInfo.js","components/KycEvent.js","components/ResponsiveDrawer.js","actions/index.js","data/Forms.js","components/Form.js","App.js","serviceWorker.js","reducers/WalletReducer.js","reducers/CurrencyReducer.js","reducers/FormReducer.js","reducers/index.js","index.js"],"names":["Home","classes","this","props","react_default","a","createElement","className","pre","href","rel","target","Component","withStyles","theme","root","display","flexWrap","white-space","Wallet","result","console","log","form","JSON","stringify","error","react","connect","state","CurrencyBalance","CurrencySent","CurrencyTransaction","_this","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","map","row","key","id","component","scope","moment","utc","time","format","toAddress","address","value","data","width","marginTop","spacing","unit","overflowX","minWidth","TokenCreated","TokenApproved","TokenTransferred","TokenWithdrawn","TokenInfo","TokenAccount","TokenTransaction","KycCreated","KycUpdated","KycInfo","KycEvent","ResponsiveDrawer","mobileOpen","handleDrawerToggle","setState","_this$props","children","pathname","location","drawer","toolbar","Divider_default","MenuList_default","MenuItem_default","Link","to","selected","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","IconButton_default","color","aria-label","onClick","menuButton","Menu_default","Typography_default","variant","noWrap","Hidden_default","smUp","implementation","Drawer_default","container","anchor","direction","open","onClose","paper","drawerPaper","ModalProps","keepMounted","xsDown","content","compose","withRouter","Object","defineProperty","breakpoints","up","flexShrink","marginLeft","concat","marginRight","mixins","flexGrow","padding","withTheme","SUBMIT_FORM_STARTED","SUBMIT_FORM_SUCCESS","SUBMIT_FORM_FAILURE","forms","currencyBalanceForm","formId","actions","host","service","action","version","title","success","schema","type","required","properties","currencyTransactionForm","currency","enum","currencySendForm","password","amount","walletCreateForm","passwordConfirm","region","description","titleMap","name","tokenCreateForm","symbol","totalSupply","decimals","tokenTransferForm","tokenAddressOrSymbol","tokenApproveForm","tokenWithdrawForm","fromAddress","tokenInfoForm","tokenAccountForm","tokenTransactionForm","kycCreateForm","email","tags","items","maxLength","kycUpdateForm","kycInfoForm","addressOrIdOrEmail","kycEventForm","Form","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onModelChange","val","utils","selectOrSet","model","fetching","nextProps","nextState","nextContext","match","params","formData","validationResult","validateBySchema","valid","submitForm","message","_this2","wait","item","index","boundButtonClick","onButtonClick","bind","push","Button_default","button","CircularProgress_default","progress","SchemaForm_default","dispatch","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","request","response","wrap","_context3","prev","next","method","headers","Accept","Content-Type","body","fetch","sent","json","payload","history","t0","toString","stop","_x3","apply","arguments","formControl","margin","selectEmpty","createBrowserHistory","App","currencyMap","undefined","transactions","handleChange","event","getBalance","_callee","e","api_call","_context","preventDefault","postFaucet","_callee2","settings","_context2","getTransaction","Router","components_ResponsiveDrawer","Switch","Route","exact","path","Boolean","window","hostname","initialState","toggleButton","combineReducers","wallet","length","objectSpread","balance","createMuiTheme","typography","useNextVariants","store","createStore","rootReducer","applyMiddleware","thunk","logger","ReactDOM","render","es","core_styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6da6109.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    pre: {\n        'white-space': 'pre-wrap',\n    },\n});\n\nclass Home extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <pre className={classes.pre}>\n                    This is the demo web-client for the taiji-blockchain testnet. Please first create a wallet by clicking the Create Wallet menu and then go to <a href=\"https://faucet.taiji.io\" rel=\"noreferrer noopener\" target=\"_blank\">taiji faucet</a> to populate up to 1000 TAIJI coins to start. You can populate up to 1000 taiji conins per day.\n                </pre>\n                <pre className={classes.pre}>\n                    To learn more about the Taiji Blockchain, please visit <a href=\"https://doc.taiji.io/\" rel=\"noreferrer noopener\" target=\"_blank\">doc.taiji.io</a>, <a href=\"https://github.com/networknt/taiji-blockchain\" rel=\"noreferrer noopener\" target=\"_blank\">taiji-blockchain</a> and <a href=\"https://github.com/taiji-chain\" rel=\"noreferrer noopener\" target=\"_blank\">taiji-chain organization</a>.\n                </pre>\n                <pre className={classes.pre}>\n                    If you have questions or want to discuss the features, please visit <a href=\"https://gitter.im/networknt/taiji-blockchain\" rel=\"noreferrer noopener\" target=\"_blank\">gitter room</a> or <a href=\"https://www.reddit.com/r/TaijiChain/\" rel=\"noreferrer noopener\" target=\"_blank\">TaijiChain Reddit</a>.\n                </pre>\n                <pre className={classes.pre}>\n                    If you find any UI problem, please open an issue at <a href=\"https://github.com/taiji-chain/web-client\" rel=\"noreferrer noopener\" target=\"_blank\">web-client</a>\n                </pre>\n                <pre className={classes.pre}>\n                    If you find any internal or logical problem, please open an issue at <a href=\"https://github.com/networknt/taiji-blockchain\" rel=\"noreferrer noopener\" target=\"_blank\">taiji-blockchain</a>\n                </pre>\n                <pre className={classes.pre}>\n                    Dec 20 - Update wallet format to include encryption key pair and add KYC - Know Your Client application. All existing wallet are removed.\n                </pre>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Home);","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass Wallet extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(Wallet);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass CurrencyBalance extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div>The balance of TAIJI is {this.props.form.result['taiji']} in SHELL</div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n             </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(CurrencyBalance);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass CurrencySent extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(CurrencySent);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Table from \"@material-ui/core/Table/Table\";\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody/TableBody\";\nimport moment from \"moment\";\nimport {withStyles} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n});\n\nclass CurrencyTransaction extends Component {\n\n    render() {\n        const { classes } = this.props;\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = (\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell numeric>TxId</TableCell>\n                                <TableCell>Time</TableCell>\n                                <TableCell>ToAddress</TableCell>\n                                <TableCell numeric>Amount in SHELL</TableCell>\n                                <TableCell>Data</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.props.form.result.map(row => {\n                                return (\n                                    <TableRow key={row.id}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {row.id}\n                                        </TableCell>\n                                        <TableCell>{moment.utc(row.time).format()}</TableCell>\n                                        <TableCell>{row.toAddress}</TableCell>\n                                        <TableCell numeric>{this.props.address === row.toAddress? '+' + row.value : '-' + row.value}</TableCell>\n                                        <TableCell>{row.data}</TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            )\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(withStyles(styles)(CurrencyTransaction));\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass TokenCreated extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(TokenCreated);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass TokenApproved extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(TokenApproved);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass TokenTransferred extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(TokenTransferred);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass TokenWithdrawn extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(TokenWithdrawn);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass TokenInfo extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(TokenInfo);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass TokenAccount extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(TokenAccount);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass TokenTransaction extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(TokenTransaction);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass KycCreated extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(KycCreated);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass KycUpdated extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(KycUpdated);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass KycInfo extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(KycInfo);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\n\nclass KycEvent extends Component {\n\n    render() {\n        console.log(this.props.form.result);\n        let result;\n        if(this.props.form.result) {\n            result = <div><pre>{JSON.stringify(this.props.form.result, null, 2) }</pre></div>\n        } else {\n            if(this.props.error) {\n                console.log('error is not empty');\n                result = <div>Error: {this.props.form.error}</div>\n            } else {\n                result = ''\n            }\n        }\n        return (\n            <Fragment>\n                {result}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\n\nexport default connect(\n    mapStateToProps\n)(KycEvent);\n","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MenuList from '@material-ui/core/MenuList';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\n\nclass ResponsiveDrawer extends Component {\n    state = {\n        mobileOpen: false,\n    };\n\n    handleDrawerToggle = () => {\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    render() {\n        const { classes, children, location: { pathname }, theme } = this.props;\n        const drawer = (\n            <div>\n                <div className={classes.toolbar} />\n                <Divider />\n                <MenuList>\n                    <MenuItem component={Link} to=\"/\" selected={'/' === pathname}>\n                        Home\n                    </MenuItem>\n                    <Divider />\n                    <MenuItem component={Link} to=\"/form/walletCreateForm\" selected={'/form/walletCreateForm' === pathname}>\n                        Create Wallet\n                    </MenuItem>\n                    <Divider />\n                    <MenuItem component={Link} to=\"/form/currencySendForm\" selected={'/form/currencySendForm' === pathname}>\n                        Send Currency\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/currencyBalanceForm\" selected={'/form/currencyBalanceForm' === pathname}>\n                        Currency Balance\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/currencyTransactionForm\" selected={'/form/currencyTransactionForm' === pathname}>\n                        Currency Transaction\n                    </MenuItem>\n                    <Divider />\n                    <MenuItem component={Link} to=\"/form/tokenCreateForm\" selected={'/form/tokenCreateForm' === pathname}>\n                        Create Token\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/tokenWithdrawForm\" selected={'/form/tokenWithdrawForm' === pathname}>\n                        Withdraw Token\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/tokenTransferForm\" selected={'/form/tokenTransferForm' === pathname}>\n                        Transfer Token\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/tokenApproveForm\" selected={'/form/tokenApproveForm' === pathname}>\n                        Approve Token\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/tokenInfoForm\" selected={'/form/tokenInfoForm' === pathname}>\n                        Token Info\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/tokenAccountForm\" selected={'/form/tokenAccountForm' === pathname}>\n                        Token Account\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/tokenTransactionForm\" selected={'/form/tokenTransactionForm' === pathname}>\n                        Token Transaction\n                    </MenuItem>\n                    <Divider />\n                    <MenuItem component={Link} to=\"/form/kycCreateForm\" selected={'/form/kycCreateForm' === pathname}>\n                        Create KYC\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/kycInfoForm\" selected={'/form/kycInfoForm' === pathname}>\n                        KYC Info\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/form/kycEventForm\" selected={'/form/kycEventForm' === pathname}>\n                        KYC Event\n                    </MenuItem>\n                </MenuList>\n            </div>\n        );\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerToggle}\n                            className={classes.menuButton}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            Taiji Blockchain - Testnet\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <nav className={classes.drawer}>\n                    {/* The implementation can be swap with js to avoid SEO duplication of links. */}\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            container={this.props.container}\n                            variant=\"temporary\"\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                            open={this.state.mobileOpen}\n                            onClose={this.handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            ModalProps={{\n                                keepMounted: true, // Better open performance on mobile.\n                            }}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                </nav>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    {children}\n                </main>\n            </div>\n        );\n    }\n}\n\n\nResponsiveDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    // Injected by the documentation to work in an iframe.\n    // You won't need it on your project.\n    container: PropTypes.object,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default compose (\n    withRouter,\n    withStyles(styles, { withTheme: true })\n)(ResponsiveDrawer);\n","import {history} from '../App';\nexport const GET_BALANCE = 'GET_BALANCE';\nexport const GET_BALANCE_SUCCESS = 'GET_BALANCE_SUCCESS';\nexport const GET_BALANCE_FAILURE = 'GET_BALANCE_FAILURE';\nexport const ADDRESS_FIELD_CHANGED = 'ADDRESS_FIELD_CHANGED';\n\nexport const POST_FAUCET = 'POST_FAUCET';\nexport const POST_FAUCET_SUCCESS = 'POST_FAUCET_SUCCESS';\nexport const POST_FAUCET_FAILURE = 'POST_FAUCET_FAILURE';\n\nexport const TOGGLE_BUTTON_ACTION = 'TOGGLE_BUTTON_ACTION';\n\nexport const SUBMIT_FORM_STARTED = 'SUBMIT_FORM_STARTED';\nexport const SUBMIT_FORM_SUCCESS = 'SUBMIT_FORM_SUCCESS';\nexport const SUBMIT_FORM_FAILURE = 'SUBMIT_FORM_FAILURE';\n\nexport function getBalance(address) {\n    console.log(address);\n    return async (dispatch) => {\n        try {\n            if(address == null || address.length === 0) {\n                console.log('dispatch error address is empty');\n                dispatch({type: GET_BALANCE_FAILURE, payload: 'Address is empty'})\n            } else {\n                const response = await fetch(`/faucet/${address}`);\n                const data = await response.json();\n                console.log(\"data\", data);\n                dispatch({ type: 'GET_BALANCE_SUCCESS', payload: data.taiji })\n            }\n        }\n        catch(e) {\n            dispatch({ type: 'GET_BALANCE_FAILURE', payload: e.toString() })\n        }\n    }\n}\n\nexport function postFaucet(address, currency, amount, unit) {\n    return async (dispatch) => {\n        const request = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                amount: amount,\n                currency: currency,\n                unit: unit\n            })\n        };\n\n        try {\n            const response = await fetch(`/faucet/${address}.json`, request);\n            const data = await response.json();\n            console.log(\"data\", data);\n            dispatch({ type: 'POST_FAUCET_SUCCESS', payload: data })\n        }\n        catch(e) {\n            console.log(\"error \" + e.toString());\n            dispatch({ type: 'POST_FAUCET_FAILURE', error: e.toString()})\n        }\n    }\n}\n\nexport const toggleButtonAction = () => {\n    return {\n        type: 'TOGGLE_BUTTON_ACTION'\n    }\n};\n\nexport const handleAddressChange = event => {\n    return {\n         type: 'ADDRESS_FIELD_CHANGED',\n         payload: event.target.value\n     };\n};\n\nexport function submitForm(action) {\n    return async (dispatch) => {\n        dispatch({type: SUBMIT_FORM_STARTED});\n        const request = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(action)\n        };\n        console.log(request);\n        try {\n            const response = await fetch('/api/webclient', request);\n            const data = await response.json();\n            console.log(\"data\", data);\n            dispatch({ type: SUBMIT_FORM_SUCCESS, payload: data });\n            history.push(action.success);\n        } catch(e) {\n            console.log(\"error \" + e.toString());\n            dispatch({ type: SUBMIT_FORM_FAILURE, error: e.toString()})\n        }\n    }\n}\n","export const forms = {\n    currencyBalanceForm: {\n        formId: 'currencyBalanceForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'currency',\n                action: 'balance',\n                version: '1.0.0',\n                title: 'Balance',\n                success: '/currencyBalance'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'address'\n            ],\n            title: 'Currency Balance',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                }\n            }\n        },\n        form: [\n            '*'\n        ]\n    },\n    currencyTransactionForm: {\n        formId: 'currencyTransactionForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'currency',\n                action: 'transaction',\n                version: '1.0.0',\n                title: 'Transaction',\n                success: '/currencyTransaction'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'address',\n                'currency'\n            ],\n            title: 'Currency Transaction',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                currency: {\n                    title: 'Currency',\n                    type: 'string',\n                    enum: ['taiji']\n                }\n            }\n        },\n        form: [\n            '*'\n        ]\n    },\n    currencySendForm: {\n        formId: 'currencySendForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'currency',\n                action: 'send',\n                version: '1.0.0',\n                title: 'Send',\n                success: '/currencySent'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'currency',\n                'address',\n                'password',\n                'toAddress',\n                'amount',\n                'unit'\n            ],\n            title: 'Currency Send',\n            properties: {\n                currency: {\n                    title: 'Currency',\n                    type: 'string',\n                    enum: ['taiji']\n                },\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                password: {\n                    title: 'Password',\n                    type: 'string'\n                },\n                toAddress: {\n                    title: 'To Address',\n                    type: 'string'\n                },\n                amount: {\n                    title: 'Amount',\n                    type: 'string',\n                },\n                unit: {\n                    title: 'Unit',\n                    type: 'string',\n                    enum: ['SHELL', 'KSHELL', 'MSHELL', 'TAIJI', 'KTAIJI', 'MTAIJI']\n                }\n            }\n        },\n        form: [\n            'currency',\n            'address',\n            {\n                key: 'password',\n                type: 'password'\n            },\n            'toAddress',\n            'amount',\n            'unit'\n        ]\n    },\n    walletCreateForm: {\n        formId: 'walletCreateForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'wallet',\n                action: 'create',\n                version: '1.0.0',\n                title: 'Wallet',\n                success: '/wallet'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'password',\n                'passwordConfirm',\n                'region'\n            ],\n            title: 'Create Wallet',\n            properties: {\n                password: {\n                    title: 'Password',\n                    type: 'string'\n                },\n                passwordConfirm: {\n                    title: 'Password Confirmation',\n                    type: 'string'\n                },\n                region: {\n                    title: 'Region',\n                    type: 'string',\n                    enum: [\n                        \"0000\", \"0001\", \"0002\"\n                    ]\n                }\n            }\n        },\n        form: [\n            {\n                type: 'help',\n                description: 'Please be aware that it takes up to 3 minutes to get the wallet generated.',\n                variant: 'h6',\n                color: 'secondary'\n            },\n            {\n                key: 'password',\n                type: 'password'\n            },\n            {\n                key: 'passwordConfirm',\n                type: 'password'\n            },\n            {\n                key: 'region',\n                type: 'select',\n                titleMap: [\n                    {\n                        value: '0000',\n                        name: 'Americas'\n                    },\n                    {\n                        value: '0001',\n                        name: 'Asia, Oceania'\n                    },\n                    {\n                        value: '0002',\n                        name: 'Europe, Africa'\n                    }\n                ]\n            }\n        ]\n    },\n    tokenCreateForm: {\n        formId: 'tokenCreateForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'token',\n                action: 'create',\n                version: '1.0.0',\n                title: 'Create',\n                success: '/tokenCreated'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'currency',\n                'address',\n                'password',\n                'name',\n                'symbol',\n                'totalSupply',\n                'decimals'\n            ],\n            title: 'Create Token',\n            properties: {\n                currency: {\n                    title: 'Currency',\n                    type: 'string',\n                    enum: ['taiji']\n                },\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                password: {\n                    title: 'Password',\n                    type: 'string'\n                },\n                name: {\n                    title: 'Token Name',\n                    type: 'string'\n                },\n                symbol: {\n                    title: 'Symbol',\n                    type: 'string'\n                },\n                totalSupply: {\n                    title: 'Total Supply',\n                    type: 'string'\n                },\n                decimals: {\n                    title: 'Decimals',\n                    type: 'string'\n                }\n            }\n        },\n        form: [\n            {\n                type: 'help',\n                description: 'Please be aware that it takes up to 3 minutes to get the token generated.',\n                variant: 'h6',\n                color: 'secondary'\n            },\n            'currency',\n            'address',\n            {\n                key: 'password',\n                type: 'password'\n            },\n            'name',\n            'symbol',\n            'totalSupply',\n            'decimals'\n        ]\n    },\n    tokenTransferForm: {\n        formId: 'tokenTransferForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'token',\n                action: 'transfer',\n                version: '1.0.0',\n                title: 'Transfer',\n                success: '/tokenTransferred'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'address',\n                'password',\n                'tokenAddressOrSymbol',\n                'toAddress',\n                'amount'\n            ],\n            title: 'Transfer Token',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                password: {\n                    title: 'Password',\n                    type: 'string'\n                },\n                tokenAddressOrSymbol: {\n                    title: 'Token Address or Symbol',\n                    type: 'string'\n                },\n                toAddress: {\n                    title: 'To Address',\n                    type: 'string'\n                },\n                amount: {\n                    title: 'Amount',\n                    type: 'string'\n                }\n            }\n        },\n        form: [\n            'address',\n            {\n                key: 'password',\n                type: 'password'\n            },\n            'tokenAddressOrSymbol',\n            'toAddress',\n            'amount'\n        ]\n    },\n    tokenApproveForm: {\n        formId: 'tokenApproveForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'token',\n                action: 'approve',\n                version: '1.0.0',\n                title: 'Approve',\n                success: '/tokenApproved'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'address',\n                'password',\n                'tokenAddressOrSymbol',\n                'toAddress',\n                'amount'\n            ],\n            title: 'Approve Token',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                password: {\n                    title: 'Password',\n                    type: 'string'\n                },\n                tokenAddressOrSymbol: {\n                    title: 'Token Address or Symbol',\n                    type: 'string'\n                },\n                toAddress: {\n                    title: 'To Address',\n                    type: 'string'\n                },\n                amount: {\n                    title: 'Amount',\n                    type: 'string'\n                }\n            }\n        },\n        form: [\n            \"address\",\n            {\n                key: 'password',\n                type: 'password'\n            },\n            \"tokenAddressOrSymbol\",\n            \"toAddress\",\n            \"amount\"\n        ]\n    },\n    tokenWithdrawForm: {\n        formId: 'tokenWithdrawForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'token',\n                action: 'withdraw',\n                version: '1.0.0',\n                title: 'Withdraw',\n                success: '/tokenWithdrawn'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'address',\n                'password',\n                'tokenAddressOrSymbol',\n                'fromAddress',\n                'amount'\n            ],\n            title: 'Withdraw Token',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                password: {\n                    title: 'Password',\n                    type: 'string'\n                },\n                tokenAddressOrSymbol: {\n                    title: 'Token Address or Symbol',\n                    type: 'string'\n                },\n                fromAddress: {\n                    title: 'From Address',\n                    type: 'string'\n                },\n                amount: {\n                    title: 'Amount',\n                    type: 'string'\n                }\n            }\n        },\n        form: [\n            'address',\n            {\n                key: 'password',\n                type: 'password'\n            },\n            'tokenAddressOrSymbol',\n            'fromAddress',\n            'amount'\n        ]\n    },\n    tokenInfoForm: {\n        formId: 'tokenInfoForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'token',\n                action: 'info',\n                version: '1.0.0',\n                title: 'Info',\n                success: '/tokenInfo'\n            }\n        ],\n        schema: {\n            type: 'object',\n            title: 'Token Info',\n            properties: {\n                tokenAddressOrSymbol: {\n                    title: 'Token Address or Symbol',\n                    type: 'string'\n                }\n            }\n        },\n        form: [\n            '*'\n        ]\n    },\n    tokenAccountForm: {\n        formId: 'tokenAccountForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'token',\n                action: 'account',\n                version: '1.0.0',\n                title: 'Account',\n                success: '/tokenAccount'\n            }\n        ],\n        schema: {\n            type: 'object',\n            title: 'Token Account',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                symbol: {\n                    title: 'Symbol',\n                    type: 'string'\n                }\n            },\n            required: [\n                'address'\n            ]\n        },\n        form: [\n            '*'\n        ]\n    },\n    tokenTransactionForm: {\n        formId: 'tokenTransactionForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'token',\n                action: 'transaction',\n                version: '1.0.0',\n                title: 'Transaction',\n                success: '/tokenTransaction'\n            }\n        ],\n        schema: {\n            type: 'object',\n            title: 'Token Transaction',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                symbol: {\n                    title: 'Symbol',\n                    type: 'string'\n                }\n            },\n            required: [\n                'address'\n            ]\n        },\n        form: [\n            '*'\n        ]\n    },\n    kycCreateForm: {\n        formId: 'kycCreateForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'kyc',\n                action: 'create',\n                version: '1.0.0',\n                title: 'Create',\n                success: '/kycCreated'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'currency',\n                'address',\n                'password',\n                'type',\n                'id',\n                'email',\n                'name'\n            ],\n            title: 'Create KYC',\n            properties: {\n                currency: {\n                    title: 'Currency',\n                    type: 'string',\n                    enum: ['taiji']\n                },\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                password: {\n                    title: 'Password',\n                    type: 'string'\n                },\n                type: {\n                    title: 'Type',\n                    type: 'string',\n                    enum: ['P', 'B']\n                },\n                id: {\n                    title: 'Id',\n                    type: 'string'\n                },\n                email: {\n                    title: 'Email',\n                    type: 'string'\n                },\n                name: {\n                    title: 'Name',\n                    type: 'string'\n                },\n                tags: {\n                    title: 'Tags',\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                description: {\n                    title: 'Description',\n                    type: 'string',\n                    maxLength: 200\n                }\n            }\n        },\n        form: [\n            'currency',\n            'address',\n            {\n                key: 'password',\n                type: 'password'\n            },\n            'type',\n            'id',\n            'email',\n            'name',\n            'tags',\n            {\n                key: 'description',\n                type: 'textarea'\n            }\n        ]\n    },\n    kycUpdateForm: {\n        formId: 'kycUpdateForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'kyc',\n                action: 'update',\n                version: '1.0.0',\n                title: 'Update',\n                success: '/kycUpdated'\n            }\n        ],\n        schema: {\n            type: 'object',\n            required: [\n                'address',\n                'password'\n            ],\n            title: 'Update KYC',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                },\n                password: {\n                    title: 'Password',\n                    type: 'string'\n                },\n                name: {\n                    title: 'KYC Name',\n                    type: 'string'\n                },\n                tags: {\n                    title: 'Tags',\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                },\n                description: {\n                    title: 'Description',\n                    type: 'string'\n                }\n            }\n        },\n        form: [\n            'address',\n            {\n                key: 'password',\n                type: 'password'\n            },\n            'name',\n            'tags',\n            'description'\n        ]\n    },\n    kycInfoForm: {\n        formId: 'kycInfoForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'kyc',\n                action: 'info',\n                version: '1.0.0',\n                title: 'Info',\n                success: '/kycInfo'\n            }\n        ],\n        schema: {\n            type: 'object',\n            title: 'KYC Info',\n            properties: {\n                addressOrIdOrEmail: {\n                    title: 'Address or Id or Email',\n                    type: 'string'\n                }\n            }\n        },\n        form: [\n            '*'\n        ]\n    },\n    kycEventForm: {\n        formId: 'kycEventForm',\n        actions: [\n            {\n                host: 'taiji.io',\n                service: 'kyc',\n                action: 'events',\n                version: '1.0.0',\n                title: 'Event',\n                success: '/kycEvent'\n            }\n        ],\n        schema: {\n            type: 'object',\n            title: 'KYC Event',\n            properties: {\n                address: {\n                    title: 'Address',\n                    type: 'string'\n                }\n            },\n            required: [\n                'address'\n            ]\n        },\n        form: [\n            '*'\n        ]\n    }\n};\n\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { submitForm} from \"../actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport SchemaForm from 'react-schema-form/lib/SchemaForm';\nimport utils from 'react-schema-form/lib/utils';\nimport {forms} from '../data/Forms';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    progress: {\n        margin: theme.spacing.unit * 2,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass Form extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetching: false,\n            error: null,\n            formId: null,\n            schema: null,\n            form: null,\n            actions: null,\n            model: {}\n        }\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if(this.state.formId !== nextProps.match.params.formId) {\n            let formData = forms[this.props.match.params.formId];\n            this.setState({\n                formId: nextProps.match.params.formId,\n                schema: formData.schema,\n                form: formData.form,\n                actions: formData.actions,\n                model: formData.model || {}\n            });\n        }\n    }\n\n    componentDidMount() {\n        let formData = forms[this.props.match.params.formId];\n        this.setState({\n            formId: this.props.match.params.formId,\n            schema: formData.schema,\n            form: formData.form,\n            actions: formData.actions,\n            model: formData.model || {}\n        });\n    }\n\n    onModelChange = (key, val) => {\n        //console.log(this.state.model);\n        utils.selectOrSet(key, this.state.model, val);\n    };\n\n    onButtonClick(action) {\n        console.log(action, this.state.model);\n        let validationResult = utils.validateBySchema(this.state.schema, this.state.model);\n        if(!validationResult.valid) {\n            this.setState({error: validationResult.error.message});\n        } else {\n            action.data = this.state.model;\n            this.setState({success: action.success, fetching: true});\n            this.props.submitForm(action);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        //console.log(this.state.actions);\n        if(this.state.schema) {\n            var actions = [];\n            this.state.actions.map((item, index) => {\n                let boundButtonClick = this.onButtonClick.bind(this, item);\n                actions.push(<Button variant=\"contained\" className={classes.button} color=\"primary\" key={index} onClick={boundButtonClick}>{item.title}</Button>)\n            });\n            let wait;\n            if(this.state.fetching) {\n                //console.log('fetching is true');\n                wait = <div><CircularProgress className={classes.progress} /></div>;\n            } else {\n                //console.log(\"fetching is false\");\n                wait = <div></div>;\n            }\n            let title = <h2>{this.state.schema.title}</h2>\n\n            return (\n                <div>\n                    {wait}\n                    {title}\n                    <SchemaForm schema={this.state.schema} form={this.state.form} model={this.state.model} onModelChange={this.onModelChange} />\n                    <pre>{this.state.error}</pre>\n                    {actions}\n                </div>\n            )\n        } else {\n            return (<CircularProgress className={classes.progress} />);\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n    submitForm: action => dispatch(submitForm(action))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Form));\n","import React, {Component} from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport { Router } from 'react-router';\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport Home from './components/Home';\nimport Wallet from './components/Wallet';\nimport CurrencyBalance from './components/CurrencyBalance';\nimport CurrencySent from './components/CurrencySent';\nimport CurrencyTransaction from './components/CurrencyTransaction';\nimport TokenCreated from './components/TokenCreated';\nimport TokenApproved from './components/TokenApproved';\nimport TokenTransferred from './components/TokenTransferred';\nimport TokenWithdrawn from './components/TokenWithdrawn';\nimport TokenInfo from './components/TokenInfo';\nimport TokenAccount from './components/TokenAccount';\nimport TokenTransaction from './components/TokenTransaction';\nimport KycCreated from './components/KycCreated';\nimport KycUpdated from './components/KycUpdated';\nimport KycInfo from './components/KycInfo';\nimport KycEvent from './components/KycEvent';\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\nimport Form from './components/Form';\n\nexport const history = createBrowserHistory();\n\nclass App extends Component {\n\n    state = {\n        address: '',\n        amount: '',\n        currency: 'taiji',\n        unit: 'TAIJI',\n        currencyMap: undefined,\n        transactions: undefined\n    };\n\n    handleChange = name => event => {\n        //console.log(name, event.target.value);\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    getBalance = async (e) => {\n        e.preventDefault();\n        //console.log('address', this.state.address);\n        const api_call = await fetch(`/faucet/${this.state.address}`);\n        const data = await api_call.json();\n        //console.log(data);\n        if (data) {\n            this.setState({\n                currencyMap: data\n            });\n        } else {\n            this.setState({\n                currencyMap: undefined\n            });\n        }\n    };\n\n    postFaucet = async (e) => {\n        e.preventDefault();\n        const settings = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                amount: this.state.amount,\n                currency: this.state.currency,\n                unit: this.state.unit\n            })\n        };\n\n        const api_call = await fetch(`/faucet/${this.state.address}`, settings)\n        const data = await api_call.json();\n        if (data) {\n            this.setState({\n                currencyMap: data\n            });\n        } else {\n            this.setState({\n                currencyMap: undefined\n            });\n        }\n    };\n\n    getTransaction = async (e) => {\n        e.preventDefault();\n        const api_call = await fetch(`/faucet/${this.state.address}/${this.state.currency}`);\n        const data = await api_call.json();\n        //console.log(data);\n        if (data) {\n            this.setState({\n                transactions: data\n            });\n        } else {\n            this.setState({\n                transactions: undefined\n            });\n        }\n    };\n\n\n    render() {\n        return (\n            <Router history={history}>\n                <ResponsiveDrawer>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route path=\"/form/:formId\" component={Form} />\n                        <Route path=\"/currencyBalance\" component={CurrencyBalance} />\n                        <Route path=\"/wallet\" component={Wallet} />\n                        <Route path=\"/currencySent\" component={CurrencySent} />\n                        <Route path=\"/currencyTransaction\" component={CurrencyTransaction} />\n                        <Route path=\"/tokenCreated\" component={TokenCreated} />\n                        <Route path=\"/tokenApproved\" component={TokenApproved} />\n                        <Route path=\"/tokenWithdrawn\" component={TokenWithdrawn} />\n                        <Route path=\"/tokenTransferred\" component={TokenTransferred} />\n                        <Route path=\"/tokenInfo\" component={TokenInfo} />\n                        <Route path=\"/tokenAccount\" component={TokenAccount} />\n                        <Route path=\"/tokenTransaction\" component={TokenTransaction} />\n                        <Route path=\"/kycCreated\" component={KycCreated} />\n                        <Route path=\"/kycUpdated\" component={KycUpdated} />\n                        <Route path=\"/kycInfo\" component={KycInfo} />\n                        <Route path=\"/kycEvent\" component={KycEvent} />\n                    </Switch>\n                </ResponsiveDrawer>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    toggleButton: false\n};\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_BUTTON_ACTION':\n            return {\n                ...state,\n                toggleButton: !state.toggleButton\n            };\n        default:\n            return state;\n    }\n}\n","const initialState = {\n    address: ''\n};\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADDRESS_FIELD_CHANGED':\n            return {\n                ...state,\n                address: action.payload\n            };\n        case 'GET_BALANCE_SUCCESS':\n            return {\n                ...state,\n                balance: action.payload\n            };\n        case 'GET_BALANCE_FAILURE':\n            return {\n                ...state,\n                error: action.payload\n            };\n\n        default:\n            return state;\n    }\n}\n","import {SUBMIT_FORM_STARTED, SUBMIT_FORM_FAILURE, SUBMIT_FORM_SUCCESS} from \"../actions\";\n\nconst initialState = {};\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SUBMIT_FORM_SUCCESS:\n            return {\n                ...state,\n                fetching: false,\n                result: action.payload\n            };\n        case SUBMIT_FORM_FAILURE:\n            return {\n                ...state,\n                fetching: false,\n                error: action.payload\n            };\n        case SUBMIT_FORM_STARTED:\n            return {\n                ...state,\n                fetching: true\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport WalletReducer from './WalletReducer';\nimport CurrencyReducer from \"./CurrencyReducer\";\nimport FormReducer from \"./FormReducer\";\n\nexport default combineReducers({\n    wallet: WalletReducer,\n    currency: CurrencyReducer,\n    form: FormReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n            <App />\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
